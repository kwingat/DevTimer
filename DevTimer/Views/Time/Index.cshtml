@using DevTimer.Helpers
@model DevTimer.Models.WorkListViewModel
@{
    ViewBag.Title = "Time";
    int hours = 0;
}

<div class="caption">
    <i class="fa fa-clock-o"></i>
    Time
</div>
<div class="btn-group"></div>
<div class="btn-group pull-right margin-top-bottom">
    @Html.NoEncodeActionLink("Add New <i class='fa fa-plus'></i>", "Add New", "Create", "Time", null, new { data_modal = "", @class = "btn green" })
    <button class="btn dropdown-toggle" data-toggle="dropdown">
        Options
        <i class="fa fa-angle-down"></i>
    </button>
    <ul class="dropdown-menu pull-right">
        <li><a href="/Time">Export to Excel</a></li>
    </ul>
</div>
<div>
    @foreach (var workday in Model.Works.GroupBy(item => item.StartTime.Value.ToString("MM/dd/yyyy")))
    {
        <div class="margin-top-bottom">
            <table class="table table-advance table-hover">
                <thead>
                <tr>
                    <th></th>
                    <th></th>
                    <th>@workday.First().StartTime.Value.ToString("MM/dd/yyyy ddd")</th>
                    <th>
                        @if (@workday.Sum(e => e.Hours) > 0)
                        {
                            @workday.Sum(e => e.Hours)<text> Hours</text>
                        }
                    </th>
                </tr>
                </thead>
                <tbody>

                @foreach (var work in workday)
                {
                    <tr>
                        <td>
                            @work.ID
                        </td>
                        <td>
                            @work.Project.Name
                        </td>
                        <td>
                            @(work.StartTime.HasValue ? work.StartTime.Value.ToShortTimeString() : "")
                            - 
                            @(work.EndTime.HasValue ? work.EndTime.Value.ToShortTimeString() : "")
                        </td>
                        <td>
                            @work.Hours
                        </td>
                        <td>
                            <div class="pull-right">
                                @Html.NoEncodeActionLink("<span>Edit</span>", "Edit", "Edit", "Time", new { id = @work.ID }, new { data_modal = "", @class = "btn btn-default" })
                            </div>
                        </td>
                    </tr>
                } 

                </tbody>
            </table>
        </div>
    }
</div>

<!-- modal placeholder-->
<div id="myModal" class='modal fade' aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap-datepicker")

    <script language="javascript">
        $(document).ready(function() {
            $(function () {

                $.ajaxSetup({ cache: false });

                $("a[data-modal]").on("click", function (e) {
                    // hide dropdown if any (this is used wehen invoking modal from link in bootstrap dropdown )
                    //$(e.target).closest('.btn-group').children('.dropdown-toggle').dropdown('toggle');

                    $('#myModalContent').load(this.href, function () {
                        $('#myModal').modal({
                            /*backdrop: 'static',*/
                            keyboard: true
                        }, 'show');

                        bindForm(this);

                        $('#date').datepicker({
                            autoclose: true,
                            todayHighlight: true,
                            format: 'mm/dd/yyyy'
                            
                        });

                        $('#startTime').clockface({
                            format: 'HH:mm',
                            trigger: 'manual'
                        });

                        $('#toggle-btnStart').click(function (e) {
                            e.stopPropagation();
                            $('#startTime').clockface('toggle');
                        });

                        $('#endTime').clockface({
                            format: 'HH:mm',
                            trigger: 'manual'
                        });

                        $('#toggle-btnEnd').click(function (e) {
                            e.stopPropagation();
                            $('#endTime').clockface('toggle');
                        });
                    });
                    return false;
                });
            });

            function bindForm(dialog) {
                $('form', dialog).submit(function () {
                    $.ajax({
                        url: this.action,
                        type: this.method,
                        data: $(this).serialize(),
                        success: function (result) {
                            if (result.success) {
                                $('#myModal').modal('hide');

                                // TODO: This line needs to reload the page asyncronously 
                                //$('#replacetarget').load(result.url); //  Load data from the server and place the returned HTML into the matched element

                                location.reload(true);
                            } else {
                                $('#myModalContent').html(result);
                                bindForm(dialog);
                            }
                        }
                    });
                    return false;
                });
            }

            
        });
    </script>
}

