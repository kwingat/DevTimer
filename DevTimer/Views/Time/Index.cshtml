@using DevTimer.Helpers
@model DevTimer.Models.WorkListViewModel
@{
    ViewBag.Title = "Time";
    int hours = 0;
}

@section styles {
    @Styles.Render("~/content/daterangepicker-bs3")
}

<div class="caption">
    <i class="fa fa-clock-o"></i>
    Time
</div>
<div class="btn-group"></div>
@using (Html.BeginForm("ExportToExcel", "Time", FormMethod.Post))
{
        <div class="btn-group pull-right margin-top-bottom">
            @Html.NoEncodeActionLink("Add New <i class='fa fa-plus'></i>", "Add New", "Create", "Time", null, new {data_modal = "", @class = "btn btn-info"})
            <button id="reportrange" class="btn dropdown-toggle">
                Export
                <i class="fa fa-angle-down"></i>
            </button>
        </div>
    }

    <div>
        @foreach (var workday in Model.Works.GroupBy(item => item.StartTime.Value.ToString("MM/dd/yyyy")))
        {
            <div class="">
                <table class="table table-striped table-advance table-hover">
                    <thead>
                        <tr style="padding-top: 10px;">
                            <th style="border-top: none; background-color:white;"></th>
                            <th style="font-weight: bold; border-top: none; background-color: white; font-size:18px;">@workday.First().StartTime.Value.ToString("MM/dd/yyyy ddd")</th>
                            <th style="border-top: none; background-color: white; font-size: 15px">@workday.Sum(e => e.Hours).Value.ToString("N") <text> Hours</text></th>
                            <th style="border-top: none; background-color: white; font-size: 15px"></th>
                            <th style="border-top:none; background-color:white;"></th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var work in workday)
                        {
                            <tr style="border-right: #ddd 1px solid; border-left: #ddd 1px solid; border-bottom: #ddd 1px solid">
                                <td class="span3">
                                    @work.Project.Name
                                </td>
                                <td class="span8">
                                    <div style="overflow: hidden; -moz-text-overflow: ellipsis; text-overflow: ellipsis; white-space: nowrap; max-width: 400px">
                                        <span>@work.Description</span>
                                    </div>
                                </td>
                                <td class="span3">
                                    @(work.StartTime.HasValue ? work.StartTime.Value.ToShortTimeString() : "")
                                    -
                                    @if (work.EndTime.HasValue)
                                    {
                                        @work.EndTime.Value.ToShortTimeString()<text> </text>
                                    }
                                    else
                                    {
                                        @Html.NoEncodeActionLink("<span class='fa fa-clock-o' > Close</span>", "Close", "Close", "Time", new { id = work.ID }, new { @class = "btn btn-warning" })
                                    }
                                </td>
                                <td class="span2">
                                    @if (work.EndTime.HasValue)
                                    {
                                        @Html.NoEncodeActionLink("<span class='fa fa-clock-o' > Continue</span>", "Continue", "Continue", "Time", new { id = work.ID }, new { data_modal = "", @class = "btn btn-success" })
                                    }
                                </td>
                                <td class="span4">
                                    <div class="pull-right">
                                        @Html.NoEncodeActionLink("<span class='fa fa-edit' > Edit</span>", "Edit", "Edit", "Time", new { id = @work.ID }, new { data_modal = "", @class = "btn btn-primary" })
                                        @Html.NoEncodeActionLink("<span class='fa fa-trash'> Delete</span>", "Delete", "Delete", "Time", new { id = @work.ID }, new { @class = "btn btn-danger" })
                                    </div>
                                </td>
                            </tr>
                            <tr style="background-color: white; border-left: none; border-right: none">
                                <td colspan="4" style="background-color: white; border-left: none; border-right: none"></td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        }
    </div>

    <!-- modal placeholder-->
    <div id="myModal" class='modal fade' aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div id='myModalContent'></div>
            </div>
        </div>
    </div>

    @section scripts
{
        @*@Scripts.Render("~/bundles/jqueryval")*@
        @Scripts.Render("~/bundles/site")
        @Scripts.Render("~/bundles/daterangepicker")

        <script language="javascript">

            $(document).ready(function () {
                $('#reportrange').daterangepicker({
                    "ranges": {
                        "Today": [
                            "2015-11-23T18:58:57.722Z",
                            "2015-11-23T18:58:57.723Z"
                        ],
                        "Yesterday": [
                            "2015-11-22T18:58:57.723Z",
                            "2015-11-22T18:58:57.723Z"
                        ],
                        "Last 7 Days": [
                            "2015-11-17T18:58:57.723Z",
                            "2015-11-23T18:58:57.723Z"
                        ],
                        "Last 30 Days": [
                            "2015-10-25T17:58:57.723Z",
                            "2015-11-23T18:58:57.723Z"
                        ],
                        "This Month": [
                            "2015-11-01T04:00:00.000Z",
                            "2015-12-01T04:59:59.999Z"
                        ],
                        "Last Month": [
                            "2015-10-01T04:00:00.000Z",
                            "2015-11-01T03:59:59.999Z"
                        ]
                    },
                    "startDate": "11/17/2015",
                    "endDate": "11/23/2015"
                }, function (start, end, label) {
                    console.log("New date range selected: ' + start.format('YYYY-MM-DD') + ' to ' + end.format('YYYY-MM-DD') + ' (predefined range: ' + label + ')");
                });
            });

            $(function () {
                $.ajaxSetup({ cache: false });

                //$('#reportrange').daterangepicker({
                //    startDate: moment().subtract('days', 29),
                //    endDate: moment(),
                //    minDate: '01/01/2015',
                //    //maxDate: '12/31/2014',
                //    dateLimit: { days: 60 },
                //    showDropdowns: true,
                //    showWeekNumbers: true,
                //    timePicker: false,
                //    timePickerIncrement: 1,
                //    timePicker12Hour: true,
                //    ranges: {
                //        'Today': [moment(), moment()],
                //        'Yesterday': [moment().subtract('days', 1), moment().subtract('days', 1)],
                //        'Last 7 Days': [moment().subtract('days', 6), moment()],
                //        'Last 30 Days': [moment().subtract('days', 29), moment()],
                //        'This Month': [moment().startOf('month'), moment().endOf('month')],
                //        'Last Month': [moment().subtract('month', 1).startOf('month'), moment().subtract('month', 1).endOf('month')]
                //    },
                //    opens: 'left',
                //    buttonClasses: ['btn btn-default'],
                //    applyClass: 'btn-small btn-primary',
                //    cancelClass: 'btn-small',
                //    format: 'MM/DD/YYYY',
                //    separator: ' to ',
                //    locale: {
                //        applyLabel: 'Submit',
                //        fromLabel: 'From',
                //        toLabel: 'To',
                //        customRangeLabel: 'Custom Range',
                //        daysOfWeek: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr','Sa'],
                //        monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                //        firstDay: 1
                //    }
                //},
                //function(start, end) {
                //    console.log("Callback has been called!");
                //    $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
                //    $('#to').val(start.format('MMMM D, YYYY'));
                //    $('#from').val(end.format('MMMM D, YYYY'));
                //});

                ////Set the initial state of the picker label
                //$('#reportrange span').html(moment().subtract('days', 29).format('MMMM D, YYYY') + ' - ' + moment().format('MMMM D, YYYY'));

                //$('#StartDate').datepicker({
                //    autoclose: true,
                //    todayHighlight: true,
                //    format: 'mm/dd/yyyy'
                //});

                //$('#EndDate').datepicker({
                //    autoclose: true,
                //    todayHighlight: true,
                //    format: 'mm/dd/yyyy'
                //});

                $("a[data-modal]").on("click", function (e) {
                    // hide dropdown if any (this is used wehen invoking modal from link in bootstrap dropdown )
                    //$(e.target).closest('.btn-group').children('.dropdown-toggle').dropdown('toggle');

                    $('#myModalContent').load(this.href, function () {
                        $('#myModal').modal({
                            /*backdrop: 'static',*/
                            keyboard: true
                        }, 'show');

                        bindForm(this);
                    });
                    return false;
                });
            });

            function pageLoad() {

            }

            function bindForm(dialog) {
                $('form', dialog).submit(function () {
                    $.ajax({
                        url: this.action,
                        type: this.method,
                        data: $(this).serialize(),
                        success: function (result) {
                            if (result.success) {
                                $('#myModal').modal('hide');

                                // TODO: This line needs to reload the page asyncronously
                                //$('#replacetarget').load(result.url); //  Load data from the server and place the returned HTML into the matched element

                                window.location.replace(result.url);
                            } else {
                                $('#myModalContent').html(result);
                                bindForm(dialog);
                            }
                        }
                    });
                    return false;
                });
            }


        </script>
    }

